@startuml
package parte9.strategy {
    interface FlyBehavior {
        +fly() : void
    }
    class FlyWithWings implements FlyBehavior
    class FlyNoWay implements FlyBehavior

    interface QuackBehavior {
        +quack() : void
    }
    class Quack implements QuackBehavior
    class Squeak implements QuackBehavior
    class MuteQuack implements QuackBehavior

    abstract class Duck {
        -flyBehavior : FlyBehavior
        -quackBehavior : QuackBehavior
        +performFly() : void
        +performQuack() : void
        +setFlyBehavior(fb : FlyBehavior) : void
        +setQuackBehavior(qb : QuackBehavior) : void
        +swim() : void
        +display() : void
    }

    class MallardDuck extends Duck
    class RubberDuck extends Duck
    class DecoyDuck extends Duck

    class DuckSimulator

    Duck o-- FlyBehavior
    Duck o-- QuackBehavior

    MallardDuck --|> Duck
    RubberDuck --|> Duck
    DecoyDuck --|> Duck

    FlyWithWings ..|> FlyBehavior
    FlyNoWay ..|> FlyBehavior

    Quack ..|> QuackBehavior
    Squeak ..|> QuackBehavior
    MuteQuack ..|> QuackBehavior

    DuckSimulator ..> Duck
}
@enduml